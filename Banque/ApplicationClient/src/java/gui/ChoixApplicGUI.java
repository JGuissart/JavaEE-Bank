/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Ejb.SessionBeanBanqueRemote;
import Ejb.SessionBeanClientRemote;
import Entities.Client;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.Resource;
import javax.ejb.EJB;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.Session;
import javax.jms.Topic;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

/**
 *
 * @author adrie
 */
public class ChoixApplicGUI extends javax.swing.JFrame
{
    private Topic topic = null;
    private Session session = null;
    
    public ChoixApplicGUI(Topic t, Session s)
    {
        initComponents();
        
        topic = t;
        session = s;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        ClientBtn = new javax.swing.JButton();
        employeBtn = new javax.swing.JButton();
        adminBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ClientBtn.setText("Client");
        ClientBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ClientBtnActionPerformed(evt);
            }
        });

        employeBtn.setText("Employe");
        employeBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                employeBtnActionPerformed(evt);
            }
        });

        adminBtn.setText("Admin");
        adminBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                adminBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(adminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClientBtn)
                .addGap(18, 18, 18)
                .addComponent(employeBtn)
                .addGap(18, 18, 18)
                .addComponent(adminBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClientBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ClientBtnActionPerformed
    {//GEN-HEADEREND:event_ClientBtnActionPerformed
        
        Client client = lookupSessionBeanClientRemote().LoginClient();
        ClientGUI clientGUI = new ClientGUI(client, topic, session);
        clientGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ClientBtnActionPerformed

    private void employeBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_employeBtnActionPerformed
    {//GEN-HEADEREND:event_employeBtnActionPerformed
        lookupSessionBeanBanqueRemote().LoginEmploye();
        EmployeGUI employeGUI = new EmployeGUI(topic, session);
        employeGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_employeBtnActionPerformed

    private void adminBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_adminBtnActionPerformed
    {//GEN-HEADEREND:event_adminBtnActionPerformed
        lookupSessionBeanBanqueRemote().LoginAdmin();
        AdminGUI adminGUI = new AdminGUI(topic, session);
        adminGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_adminBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClientBtn;
    private javax.swing.JButton adminBtn;
    private javax.swing.JButton employeBtn;
    // End of variables declaration//GEN-END:variables

    private SessionBeanClientRemote lookupSessionBeanClientRemote()
    {
        try
        {
            Context c = new InitialContext();
            return (SessionBeanClientRemote) c.lookup("java:comp/env/SessionBeanClient");
        } catch (NamingException ne)
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, "exception caught", ne);
            throw new RuntimeException(ne);
        }
    }

    private SessionBeanBanqueRemote lookupSessionBeanBanqueRemote()
    {
        try
        {
            Context c = new InitialContext();
            return (SessionBeanBanqueRemote) c.lookup("java:comp/env/SessionBeanBanque");
        } catch (NamingException ne)
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, "exception caught", ne);
            throw new RuntimeException(ne);
        }
    }
}
